// src/vk/events.js ‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ VK-—Å–æ–±—ã—Ç–∏–π —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π –∏ —Å—á—ë—Ç—á–∏–∫–æ–º –ª–∞–π–∫–æ–≤

const axios = require('axios');
const { state, shouldDeliver } = require('../state'); // shouldDeliver –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî —Å–º. allowDeliver()
const { sendTelegramMessageWithRetry } = require('../telegram');
const { escapeHtml, getVkUserName } = require('../utils');
const { VK_GROUP_ID, VK_SERVICE_KEY, LEAD_CHAT_ID } = require('../config');

/** –î–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ?
 *  true ‚Äî –¥–æ—Å—Ç–∞–≤–ª—è–µ–º; false ‚Äî –Ω–µ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º.
 *  –ï—Å–ª–∏ shouldDeliver –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –±–ª–æ–∫–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —è–≤–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã.
 */
function allowDeliver(type) {
  if (typeof shouldDeliver === 'function') return !!shouldDeliver(type);
  const map = (state && state.eventToggleState) ? state.eventToggleState : {};
  return !(Object.prototype.hasOwnProperty.call(map, type) && map[type] === false);
}

/** –ì–ª–∞–≤–Ω—ã–π —á–∞—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */
function getMainChat() {
  return state.CURRENT_MAIN_CHAT_ID;
}

/** –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–∞—è –ø–æ–¥–ø–∏—Å—å —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ª–∞–π–∫–æ–≤/—Å—Å—ã–ª–æ–∫ */
function getObjectTypeDisplayName(type) {
  const t = String(type || '').toLowerCase();
  switch (t) {
    case 'post':            return '–ø–æ—Å—Ç—É';
    case 'comment':         return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é';
    case 'photo':           return '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏';
    case 'video':           return '–≤–∏–¥–µ–æ';
    case 'note':            return '–∑–∞–º–µ—Ç–∫–µ';
    case 'photo_comment':   return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ñ–æ—Ç–æ';
    case 'video_comment':   return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ –≤–∏–¥–µ–æ';
    case 'topic_comment':   return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏';
    case 'market':          return '—Ç–æ–≤–∞—Ä—É';
    case 'market_comment':  return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ç–æ–≤–∞—Ä—É';
    case 'topic':           return '–æ–±—Å—É–∂–¥–µ–Ω–∏—é';
    // —Ä–µ–¥–∫–∏–µ/–Ω–æ–≤—ã–µ
    case 'clip':            return '–∫–ª–∏–ø—É';
    case 'story':           return '–∏—Å—Ç–æ—Ä–∏–∏';
    case 'article':         return '—Å—Ç–∞—Ç—å–µ';
    case 'sitepage':        return '—Å—Ç—Ä–∞–Ω–∏—Ü–µ';
    case 'app':             return '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é';
    case 'podcast':         return '–ø–æ–¥–∫–∞—Å—Ç—É';
    default:                return String(type || '–æ–±—ä–µ–∫—Ç—É');
  }
}

/** –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ (–∏–Ω–∞—á–µ null) */
function buildObjectLink(ownerId, objectType, objectId, postId) {
  const t = String(objectType || '').toLowerCase();
  const ownAbs = String(ownerId || '').replace(/^-/, ''); // URL –≤—Å–µ–≥–¥–∞ –±–µ–∑ –º–∏–Ω—É—Å–∞
  switch (t) {
    case 'post':
      return `https://vk.com/wall-${ownAbs}_${objectId}`;
    case 'comment':
      return postId ? `https://vk.com/wall-${ownAbs}_${postId}?reply=${objectId}` : null;
    case 'photo':
      return `https://vk.com/photo-${ownAbs}_${objectId}`;
    case 'video':
      return `https://vk.com/video-${ownAbs}_${objectId}`;
    case 'market':
      return `https://vk.com/market-${ownAbs}?w=product-${ownAbs}_${objectId}`;
    case 'topic':
      return `https://vk.com/topic-${ownAbs}_${postId || objectId}`;
    case 'photo_comment':
      return `https://vk.com/photo-${ownAbs}_${postId || objectId}?reply=${objectId}`;
    case 'video_comment':
      return `https://vk.com/video-${ownAbs}_${postId || objectId}?reply=${objectId}`;
    case 'topic_comment':
      return `https://vk.com/topic-${ownAbs}_${postId || objectId}?reply=${objectId}`;
    case 'market_comment':
      return `https://vk.com/market-${ownAbs}?w=product-${ownAbs}_${postId || objectId}`;
    default:
      return null; // clip/story/article/sitepage/app/podcast ‚Äî –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏ –æ–±—ã—á–Ω–æ –Ω–µ—Ç
  }
}

/** –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫ –¥–æ–ø—É—Å—Ç–∏–º—ã–º –¥–ª—è likes.getList */
function toLikesApiType(objectType) {
  const t = String(objectType || '').toLowerCase();
  // –î–æ–ø—É—Å—Ç–∏–º—ã–µ: post, comment, photo, video, note, photo_comment, video_comment, topic_comment, market, market_comment, sitepage
  switch (t) {
    case 'post':
    case 'comment':
    case 'photo':
    case 'video':
    case 'note':
    case 'photo_comment':
    case 'video_comment':
    case 'topic_comment':
    case 'market':
    case 'market_comment':
    case 'sitepage':
      return t;
    default:
      return null;
  }
}

/** –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ —á–µ—Ä–µ–∑ VK API (service key) */
async function tryGetLikesCount(ownerId, objectId, objectType) {
  const type = toLikesApiType(objectType);
  if (!type) return null;      // –¥–ª—è –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º
  if (!VK_SERVICE_KEY) return null;

  const params = {
    access_token: VK_SERVICE_KEY,
    v: '5.199',
    type,
    owner_id: ownerId,
    item_id: objectId,
    count: 0 // –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ count
  };

  try {
    const { data } = await axios.get('https://api.vk.com/method/likes.getList', { params, timeout: 3000 });
    if (data && data.response && typeof data.response.count === 'number') {
      return data.response.count;
    }
  } catch (_) {
    // –º–æ–ª—á–∞ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ–∫–∞–∂–µ–º (–í—Å–µ–≥–æ: N)
  }
  return null;
}

/** –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç */
async function notifyMAIN(html) {
  const MAIN = getMainChat();
  if (!MAIN || !html) return;
  await sendTelegramMessageWithRetry(MAIN, html, { parse_mode: 'HTML' });
}

/** –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ (—Å–µ–∫—É–Ω–¥—ã ‚Üí H:MM:SS/MM:SS) */
function formatDuration(sec) {
  const s = Math.max(0, Math.floor(sec));
  const h = Math.floor(s / 3600);
  const m = Math.floor((s % 3600) / 60);
  const r = s % 60;
  return h ? `${h}:${String(m).padStart(2,'0')}:${String(r).padStart(2,'0')}` : `${m}:${String(r).padStart(2,'0')}`;
}

/** (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –≤—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ –ø—Ä–µ–≤—å—é –¥–ª—è –≤–∏–¥–µ–æ */
function pickBestPreviewUrl(v) {
  const all = Array.isArray(v.image) ? v.image : [];
  if (!all.length) return null;
  const best = [...all].sort((a,b) => (b.width||0) - (a.width||0))[0];
  return best?.url || null;
}

/** –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ */
async function handleVkEvent({ type, object }) {
  // —É–≤–∞–∂–∞–µ–º —Ç—É–º–±–ª–µ—Ä—ã
  if (!allowDeliver(type)) return;

  let msg = '';

  switch (type) {
    // ---------------- –°–æ–æ–±—â–µ–Ω–∏—è ----------------
    case 'message_new': {
      const m = object.message || object;
      const user = await getVkUserName(m.from_id);
      msg = `üí¨ <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>\n<b>–û—Ç:</b> <a href="https://vk.com/id${m.from_id}">${user}</a>\n` +
            (m.text ? `<b>–¢–µ–∫—Å—Ç:</b> <i>${escapeHtml(m.text)}</i>` : '<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>');
      break;
    }

    case 'message_reply': {
      const r = object;
      // –µ—Å–ª–∏ —É —Ç–µ–±—è –±—ã–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å–ª—É–∂–µ–±–Ω—ã–º –æ—Ç–≤–µ—Ç–∞–º ‚Äî –æ—Å—Ç–∞–≤—å/–≤–µ—Ä–Ω–∏ –∑–¥–µ—Å—å
      if (r?.text?.includes('–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø–æ —Ñ–æ—Ä–º–µ')) break;
      const user = await getVkUserName(r.from_id);
      msg = `‚Ü©Ô∏è <b>–û—Ç–≤–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö:</b>\n<b>–û—Ç:</b> <a href="https://vk.com/id${r.from_id}">${user}</a>\n` +
            `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n<i>${escapeHtml(r.text || '')}</i>`;
      break;
    }

    case 'message_allow': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      msg = `‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—Ä–µ—à–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n<a href="https://vk.com/id${ev.user_id}">${user}</a>`;
      break;
    }

    case 'message_deny': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      msg = `‚õîÔ∏è <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—Ç–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n<a href="https://vk.com/id${ev.user_id}">${user}</a>`;
      break;
    }

    // ---------------- –õ–∞–π–∫–∏ ----------------
    case 'like_add':
    case 'like_remove': {
      const ev = object;

      // –£ VK owner_id –≤ –ª–∞–π–∫–∞—Ö –±—ã–≤–∞–µ—Ç –ø—É—Å—Ç—ã–º ‚Äî –ø–æ–¥—Å—Ç–∞–≤–∏–º ID —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
      let ownerId = ev.owner_id;
      if (!ownerId) ownerId = -Number(VK_GROUP_ID);

      const typeText = getObjectTypeDisplayName(ev.object_type);

      // –ò–º—è –ª–∞–π–∫–Ω—É–≤—à–µ–≥–æ
      let liker = `ID ${ev.liker_id}`;
      try {
        const name = await getVkUserName(ev.liker_id);
        if (name) liker = name;
      } catch {}

      // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
      const link = buildObjectLink(ownerId, ev.object_type, ev.object_id, ev.post_id);

      // –°—á—ë—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤
      let total = null;
      try {
        total = await tryGetLikesCount(ownerId, ev.object_id, ev.object_type);
      } catch {}

      msg  = `<b>${type === 'like_add' ? '‚ù§Ô∏è –ù–æ–≤—ã–π –ª–∞–π–∫ –≤ VK' : 'üíî –õ–∞–π–∫ —É–¥–∞–ª—ë–Ω –≤ VK'}</b>\n`;
      msg += `<b>–û—Ç:</b> <a href="https://vk.com/id${ev.liker_id}">${liker}</a>\n`;
      msg += `<b>${type === 'like_add' ? '–ö' : '–°'}:</b> `;

      if (link) {
        msg += `<a href="${link}">${typeText}</a>`;
      } else {
        msg += `${typeText} ID <code>${ev.object_id}</code>`;
      }

      if (typeof total === 'number') {
        msg += ` (–í—Å–µ–≥–æ: ${total})`;
      }
      break;
    }

    // ---------------- –°—Ç–µ–Ω–∞: –ø–æ—Å—Ç—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ----------------
    case 'wall_post_new': {
      const p = object;
      const author = await getVkUserName(p.from_id || p.owner_id);
      const link = `https://vk.com/wall${p.owner_id}_${p.id}`;
      msg = `üß± <b>–ù–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ —Å—Ç–µ–Ω–µ</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${p.from_id || p.owner_id}">${author}</a>\n` +
            `<a href="${link}">–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—Ç</a>`;
      if (p.text) msg += `\n<i>${escapeHtml(p.text.slice(0, 700))}</i>`;
      break;
    }

    case 'wall_reply_new': {
      const c = object; // —Å–º. –ø—Ä–∏–º–µ—Ä payload
      const author = await getVkUserName(c.from_id).catch(() => `id${c.from_id}`);
      const ownerAbs = String(c.owner_id).replace(/^-/, '');
      const link = `https://vk.com/wall-${ownerAbs}_${c.post_id}?reply=${c.id}`;
      const text = c.text ? `<i>${escapeHtml(c.text)}</i>` : '<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>';
      msg =
        `üí¨ <b>–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ —Å—Ç–µ–Ω–µ</b>\n` +
        `<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${author}</a>\n` +
        `<b>–ö –ø–æ—Å—Ç—É:</b> <a href="${link}">–æ—Ç–∫—Ä—ã—Ç—å</a>\n` +
        `${text}`;
      break;
    }

    // (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ)
    case 'wall_reply_edit': {
      const c = object;
      const author = await getVkUserName(c.from_id).catch(() => `id${c.from_id}`);
      const ownerAbs = String(c.owner_id).replace(/^-/, '');
      const link = `https://vk.com/wall-${ownerAbs}_${c.post_id}?reply=${c.id}`;
      const text = c.text ? `<i>${escapeHtml(c.text)}</i>` : '<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>';
      msg =
        `‚úèÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω</b>\n` +
        `<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${author}</a>\n` +
        `<b>–ö –ø–æ—Å—Ç—É:</b> <a href="${link}">–æ—Ç–∫—Ä—ã—Ç—å</a>\n` +
        `${text}`;
      break;
    }

    case 'wall_reply_delete': {
      const c = object;
      const ownerAbs = String(c.owner_id).replace(/^-/, '');
      const link = `https://vk.com/wall-${ownerAbs}_${c.post_id}`;
      msg =
        `üóëÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É–¥–∞–ª—ë–Ω</b>\n` +
        `<b>–ö –ø–æ—Å—Ç—É:</b> <a href="${link}">–æ—Ç–∫—Ä—ã—Ç—å</a>\n` +
        `<code>id=${c.comment_id}</code>`;
      break;
    }

    // ---------------- –í—Å—Ç—É–ø–ª–µ–Ω–∏—è/–≤—ã—Ö–æ–¥—ã ----------------
    case 'group_join': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      const kind = String(ev.join_type || '').toLowerCase();
      const kindLabel = ({
        approved: '–∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞',
        request: '–ø–æ–¥–∞–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
        accepted: '–≤—Å—Ç—É–ø–∏–ª(–∞)',
        joined: '–≤—Å—Ç—É–ø–∏–ª(–∞)'
      })[kind] || '–≤—Å—Ç—É–ø–∏–ª(–∞)';
      msg = `üü¢ <b>${escapeHtml(kindLabel)} –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ</b>\n<a href="https://vk.com/id${ev.user_id}">${user}</a>`;
      break;
    }

    case 'group_leave': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      const admin = ev.admin_id ? await getVkUserName(ev.admin_id) : null;
      const by = ev.self ? '—Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ' : (admin ? `–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º <a href="https://vk.com/id${ev.admin_id}">${admin}</a>` : '‚Äî');
      msg = `üî¥ <b>–ü–æ–∫–∏–Ω—É–ª(–∞) —Å–æ–æ–±—â–µ—Å—Ç–≤–æ</b>\n<a href="https://vk.com/id${ev.user_id}">${user}</a>\n<b>–ü—Ä–∏—á–∏–Ω–∞:</b> ${escapeHtml(by)}`;
      // –µ—Å–ª–∏ —É —Ç–µ–±—è —É—Ö–æ–¥—ã –∏–¥—É—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —á–∞—Ç ‚Äî —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π:
      // if (LEAD_CHAT_ID) { await sendTelegramMessageWithRetry(LEAD_CHAT_ID, msg, { parse_mode: 'HTML' }); msg = ''; }
      break;
    }

    // ---------------- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –º–µ–¥–∏–∞/—Ç–æ–≤–∞—Ä–∞–º/–æ–±—Å—É–∂–¥–µ–Ω–∏—è–º ----------------
    case 'photo_comment_new': {
      const c = object;
      const author = await getVkUserName(c.from_id);
      msg = `üñºÔ∏è <b>–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–æ—Ç–æ</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${author}</a>\n<b>–¢–µ–∫—Å—Ç:</b> <i>${escapeHtml(c.text || '')}</i>`;
      break;
    }
    case 'video_comment_new': {
      const c = object;
      const author = await getVkUserName(c.from_id);
      msg = `üé¨ <b>–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–∏–¥–µ–æ</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${author}</a>\n<b>–¢–µ–∫—Å—Ç:</b> <i>${escapeHtml(c.text || '')}</i>`;
      break;
    }
    case 'market_comment_new': {
      const c = object;
      const author = await getVkUserName(c.from_id);
      msg = `üõí <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–æ–≤–∞—Ä—É</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${author}</a>\n<b>–¢–µ–∫—Å—Ç:</b> <i>${escapeHtml(c.text || '')}</i>`;
      break;
    }
    case 'topic_comment_new': {
      const c = object;
      const author = await getVkUserName(c.from_id);
      msg = `üóÇÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${author}</a>\n<b>–¢–µ–∫—Å—Ç:</b> <i>${escapeHtml(c.text || '')}</i>`;
      break;
    }

    // ---------------- –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ ----------------
    case 'video_new': {
      const v = object;
      const ownerAbs = String(v.owner_id || '').replace(/^-/, '');
      const link = `https://vk.com/video-${ownerAbs}_${v.id}`;

      // –∞–≤—Ç–æ—Ä –≤–∏–¥–µ–æ (—á–∞—Å—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç user_id)
      const authorId = v.user_id || v.owner_id;
      const author = await getVkUserName(authorId).catch(() => `id${authorId}`);

      const title = v.title ? escapeHtml(v.title) : '–í–∏–¥–µ–æ';
      const desc = v.description ? `<i>${escapeHtml(v.description).slice(0, 600)}</i>` : '<i>(–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è)</i>';
      const dur  = (typeof v.duration === 'number') ? formatDuration(v.duration) : null;

      let lines = [
        'üé¨ <b>–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ</b>',
        `<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${authorId}">${author}</a>`,
        `<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${title}`,
        `<b>–°—Å—ã–ª–∫–∞:</b> <a href="${link}">–æ—Ç–∫—Ä—ã—Ç—å</a>`
      ];
      if (dur) lines.splice(3, 0, `<b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> ${dur}`);
      lines.push(desc);
      msg = lines.join('\n');

      // (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–µ–≤—å—é-–∫–∞—Ä—Ç–∏–Ω–∫–æ–π:
      // const preview = pickBestPreviewUrl(v);
      // if (preview) {
      //   await sendTelegramMessageWithRetry(getMainChat(), `<a href="${link}">&#8205;</a>`, { parse_mode: 'HTML' }); // ¬´–Ω–µ–≤–∏–¥–∏–º–∞—è¬ª —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–¥–Ω–æ–π –æ–±—ä–µ–∫—Ç
      //   await sendTelegramPhotoWithRetry(getMainChat(), preview, { caption: msg, parse_mode: 'HTML' });
      //   msg = '';
      // }

      break;
    }

    // ---------------- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ —Ç–µ—Ä—è–µ–º ----------------
    default: {
      // –∫—Ä–∞—Å–∏–≤—ã–π –¥–∞–º–ø, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –≤—Å–µ —Ä–µ–¥–∫–∏–µ –ø–æ–ª—è; –±–µ–∑–æ–ø–∞—Å–∏–º HTML
      msg = `‚ùì <b>–°–æ–±—ã—Ç–∏–µ VK:</b>\n–¢–∏–ø: <code>${escapeHtml(type)}</code>\n<pre>${escapeHtml(JSON.stringify(object, null, 2))}</pre>`;
      break;
    }
  }

  if (msg) {
    await notifyMAIN(msg);
  }
}

module.exports = { handleVkEvent };
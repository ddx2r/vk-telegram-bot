// src/vk/events.js ‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ VK-—Å–æ–±—ã—Ç–∏–π (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ "–≤—Å–µ—Ö" —Å–æ–±—ã—Ç–∏—è—Ö)

const axios = require('axios');
const { state } = require('../state');
const { sendTelegramMessageWithRetry } = require('../telegram');
const { escapeHtml, getVkUserName } = require('../utils');
const { VK_GROUP_ID, VK_SERVICE_KEY, LEAD_CHAT_ID } = require('../config');

// --- –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å—Å—ã–ª–æ–∫/–Ω–∞–∑–≤–∞–Ω–∏–π ---
function getObjectTypeDisplayName(type) {
  switch (type) {
    case 'post': return '–ø–æ—Å—Ç—É';
    case 'photo': return '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏';
    case 'video': return '–≤–∏–¥–µ–æ';
    case 'comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é';
    case 'topic': return '–æ–±—Å—É–∂–¥–µ–Ω–∏—é';
    case 'market': return '—Ç–æ–≤–∞—Ä—É';
    default: return `–æ–±—ä–µ–∫—Ç—É —Ç–∏–ø–∞ <code>${escapeHtml(type)}</code>`;
  }
}

function getObjectLinkForLike(ownerId, objectType, objectId, postId) {
  if (objectType === 'comment' && postId) {
    return `https://vk.com/wall${ownerId}_${postId}?reply=${objectId}`;
  }
  switch (objectType) {
    case 'post': return `https://vk.com/wall${ownerId}_${objectId}`;
    case 'photo': return `https://vk.com/photo${ownerId}_${objectId}`;
    case 'video': return `https://vk.com/video${ownerId}_${objectId}`;
    case 'comment': return `https://vk.com/id${ownerId}?w=wall${ownerId}_${objectId}`;
    case 'topic': return `https://vk.com/topic-${VK_GROUP_ID}_${objectId}`;
    case 'market': return `https://vk.com/market-${ownerId}?w=product-${ownerId}_${objectId}`;
    default: return null;
  }
}

// –ö–æ—Ä–æ—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π (–±–µ–∑ –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∏–Ω–∞—Ä–µ–π)
function summarizeAttachments(attachments = []) {
  if (!attachments || !attachments.length) return '';
  const lines = ['\n\n<b>–í–ª–æ–∂–µ–Ω–∏—è:</b>'];
  for (const a of attachments) {
    switch (a.type) {
      case 'photo': {
        const url = a.photo?.sizes?.slice(-1)?.[0]?.url;
        lines.push(`üì∏ –§–æ—Ç–æ${url ? ` ‚Äî <a href="${url}">—Å—Å—ã–ª–∫–∞</a>` : ''}`);
        break;
      }
      case 'video': {
        const v = a.video;
        const link = v?.owner_id && v?.id ? `https://vk.com/video${v.owner_id}_${v.id}` : (v?.player || null);
        lines.push(`üé• –í–∏–¥–µ–æ ‚Äî ${link ? `<a href="${link}">${escapeHtml(v?.title || '—Å—Å—ã–ª–∫–∞')}</a>` : '–±–µ–∑ —Å—Å—ã–ª–∫–∏'}`);
        break;
      }
      case 'audio': {
        const au = a.audio;
        lines.push(`üéµ –ê—É–¥–∏–æ ‚Äî ${escapeHtml(au?.artist || '‚Äî')} ‚Äî ${escapeHtml(au?.title || '‚Äî')}${au?.url ? ` (<a href="${au.url}">—Å—Å—ã–ª–∫–∞</a>)` : ''}`);
        break;
      }
      case 'doc': {
        const d = a.doc;
        lines.push(`üìÑ –î–æ–∫—É–º–µ–Ω—Ç ‚Äî ${escapeHtml(d?.title || '‚Äî')}${d?.url ? ` (<a href="${d.url}">—Å–∫–∞—á–∞—Ç—å</a>)` : ''}`);
        break;
      }
      case 'link': {
        const l = a.link;
        lines.push(`üîó –°—Å—ã–ª–∫–∞ ‚Äî <a href="${l?.url}">${escapeHtml(l?.title || l?.url || '‚Äî')}</a>`);
        break;
      }
      case 'sticker': {
        const s = a.sticker;
        const url = s?.images_with_background?.slice(-1)?.[0]?.url || s?.images?.slice(-1)?.[0]?.url;
        lines.push(`üñºÔ∏è –°—Ç–∏–∫–µ—Ä${url ? ` ‚Äî <a href="${url}">—Å—Å—ã–ª–∫–∞</a>` : ''}`);
        break;
      }
      case 'graffiti': {
        const g = a.graffiti;
        lines.push(`üé® –ì—Ä–∞—Ñ—Ñ–∏—Ç–∏${g?.url ? ` ‚Äî <a href="${g.url}">—Å—Å—ã–ª–∫–∞</a>` : ''}`);
        break;
      }
      case 'poll': {
        lines.push(`üìä –û–ø—Ä–æ—Å`);
        break;
      }
      case 'wall': {
        const w = a.wall;
        if (w?.owner_id && w?.id) lines.push(`üìù –í–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç ‚Äî <a href="https://vk.com/wall${w.owner_id}_${w.id}">—Å—Å—ã–ª–∫–∞</a>`);
        break;
      }
      default:
        lines.push(`‚ùì –í–ª–æ–∂–µ–Ω–∏–µ: ${escapeHtml(a.type)}`);
    }
  }
  return lines.join('\n');
}

// –ú–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –ª–∞–π–∫–æ–≤ (—É–ø—Ä–æ—â—ë–Ω–Ω–æ –±–µ–∑ –æ—à–∏–±–æ–∫)
async function tryGetLikesCount(ownerId, itemId, type) {
  try {
    const r = await axios.get('https://api.vk.com/method/likes.getList', {
      params: { type, owner_id: ownerId, item_id: itemId, access_token: VK_SERVICE_KEY, v: '5.131' },
      timeout: 5000
    });
    return r.data?.response?.count ?? null;
  } catch {
    return null;
  }
}

async function handleVkEvent({ type, object }) {
  if (state.eventToggleState[type] === false) return;

  let msg = '';
  const MAIN = state.CURRENT_MAIN_CHAT_ID;

  switch (type) {
    // --- –°–æ–æ–±—â–µ–Ω–∏—è
    case 'message_new': {
      const m = object.message || object;
      const user = await getVkUserName(m.from_id);
      msg = `üí¨ <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>\n<b>–û—Ç:</b> <a href="https://vk.com/id${m.from_id}">${user}</a>\n` +
            (m.text ? `<b>–¢–µ–∫—Å—Ç:</b> <i>${escapeHtml(m.text)}</i>` : '<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>') +
            summarizeAttachments(m.attachments);
      break;
    }
    case 'message_reply': {
      const r = object;
      if (r?.text?.includes('–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –ø–æ —Ñ–æ—Ä–º–µ')) break; // —Ñ–∏–ª—å—Ç—Ä –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞ –∏–∑ —Ç–≤–æ–µ–≥–æ –∫–æ–¥–∞
      const user = await getVkUserName(r.from_id);
      msg = `‚Ü©Ô∏è <b>–û—Ç–≤–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö:</b>\n<b>–û—Ç:</b> <a href="https://vk.com/id${r.from_id}">${user}</a>\n` +
            `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n<i>${escapeHtml(r.text || '')}</i>`;
      break;
    }
    case 'message_allow': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      msg = `‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—Ä–µ—à–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n<a href="https://vk.com/id${ev.user_id}">${user}</a>`;
      break;
    }
    case 'message_deny': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      msg = `‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—Ç–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n<a href="https://vk.com/id${ev.user_id}">${user}</a>`;
      break;
    }

    // --- –°—Ç–µ–Ω–∞
    case 'wall_post_new': {
      const p = object.post || object;
      const fromId = p.from_id || p.owner_id;
      const user = await getVkUserName(fromId);
      msg = `üìù <b>–ù–æ–≤—ã–π –ø–æ—Å—Ç:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${fromId}">${user}</a>\n` +
            `<a href="https://vk.com/wall${p.owner_id}_${p.id}">–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç</a>\n` +
            (p.text ? `<i>${escapeHtml(p.text)}</i>` : `<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>`) +
            summarizeAttachments(p.attachments);
      break;
    }
    case 'wall_repost': {
      const rp = object.post || object;
      const cp = rp.copy_history?.[0];
      if (rp && cp) {
        const fromId = rp.from_id || rp.owner_id;
        const user = await getVkUserName(fromId);
        msg = `üîÅ <b>–†–µ–ø–æ—Å—Ç:</b>\n<b>–†–µ–ø–æ—Å—Ç–Ω—É–ª:</b> <a href="https://vk.com/id${fromId}">${user}</a>\n` +
              `<a href="https://vk.com/wall${cp.owner_id}_${cp.id}">–û—Ä–∏–≥–∏–Ω–∞–ª</a>\n` +
              (cp.text ? `<i>${escapeHtml(cp.text.slice(0, 200))}${cp.text.length > 200 ? '‚Ä¶' : ''}</i>` : `<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>`) +
              summarizeAttachments(cp.attachments);
      } else {
        msg = `üîÅ –†–µ–ø–æ—Å—Ç (payload –Ω–µ–ø–æ–ª–Ω—ã–π)\n<pre>${escapeHtml(JSON.stringify(object, null, 2))}</pre>`;
      }
      break;
    }
    case 'wall_reply_new':
    case 'wall_reply_edit': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      const verb = type === 'wall_reply_new' ? '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É' : '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É –∏–∑–º–µ–Ω—ë–Ω';
      msg = `üí¨ <b>${verb}:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/wall${c.owner_id}_${c.post_id}?reply=${c.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : `<i>(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)</i>`) +
            summarizeAttachments(c.attachments);
      break;
    }
    case 'wall_reply_delete': {
      const c = object;
      const user = c.deleter_id ? await getVkUserName(c.deleter_id) : '‚Äî';
      msg = `üóëÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É —É–¥–∞–ª—ë–Ω:</b>\n` +
            (c.deleter_id ? `<b>–£–¥–∞–ª–∏–ª:</b> <a href="https://vk.com/id${c.deleter_id}">${user}</a>\n` : '') +
            `<b>–ü–æ—Å—Ç:</b> <a href="https://vk.com/wall${c.owner_id}_${c.post_id}">—Å—Å—ã–ª–∫–∞</a>\n` +
            `ID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: <code>${c.id}</code>`;
      break;
    }
    case 'wall_reply_restore': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      msg = `‚ôªÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/wall${c.owner_id}_${c.post_id}?reply=${c.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : '');
      break;
    }

    // --- –§–æ—Ç–æ
    case 'photo_new': {
      const p = object.photo || object;
      const user = await getVkUserName(p.owner_id);
      const url = p.sizes?.slice(-1)?.[0]?.url;
      msg = `üì∏ <b>–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ:</b>\n<b>–í–ª–∞–¥–µ–ª–µ—Ü:</b> <a href="https://vk.com/id${p.owner_id}">${user}</a>\n` +
            (url ? `<a href="${url}">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ</a>` : '') +
            (p.text ? `\n<i>${escapeHtml(p.text)}</i>` : '');
      break;
    }
    case 'photo_comment_new':
    case 'photo_comment_edit': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      const verb = type === 'photo_comment_new' ? '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–æ—Ç–æ' : '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–æ—Ç–æ –∏–∑–º–µ–Ω—ë–Ω';
      msg = `üí¨ <b>${verb}:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/photo${c.owner_id}_${c.photo_id}?reply=${c.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : '') +
            summarizeAttachments(c.attachments);
      break;
    }
    case 'photo_comment_delete': {
      const c = object;
      const user = c.deleter_id ? await getVkUserName(c.deleter_id) : '‚Äî';
      msg = `üóëÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–æ—Ç–æ —É–¥–∞–ª—ë–Ω:</b>\n` +
            (c.deleter_id ? `<b>–£–¥–∞–ª–∏–ª:</b> <a href="https://vk.com/id${c.deleter_id}">${user}</a>\n` : '') +
            `ID —Ñ–æ—Ç–æ: <code>${c.photo_id}</code>\nID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: <code>${c.id}</code>`;
      break;
    }
    case 'photo_comment_restore': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      msg = `‚ôªÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–æ—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/photo${c.owner_id}_${c.photo_id}?reply=${c.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : '');
      break;
    }

    // --- –í–∏–¥–µ–æ
    case 'video_new': {
      const v = object.video || object;
      const user = await getVkUserName(v.owner_id);
      msg = `üé• <b>–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ:</b>\n<b>–í–ª–∞–¥–µ–ª–µ—Ü:</b> <a href="https://vk.com/id${v.owner_id}">${user}</a>\n` +
            `<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${escapeHtml(v.title || '‚Äî')}\n` +
            (v.owner_id && v.id ? `<a href="https://vk.com/video${v.owner_id}_${v.id}">–°—Å—ã–ª–∫–∞</a>` : '');
      break;
    }
    case 'video_comment_new':
    case 'video_comment_edit': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      const verb = type === 'video_comment_new' ? '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–∏–¥–µ–æ' : '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–∏–¥–µ–æ –∏–∑–º–µ–Ω—ë–Ω';
      msg = `üí¨ <b>${verb}:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/video${c.owner_id}_${c.video_id}?reply=${c.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : '') +
            summarizeAttachments(c.attachments);
      break;
    }
    case 'video_comment_delete': {
      const c = object;
      const user = c.deleter_id ? await getVkUserName(c.deleter_id) : '‚Äî';
      msg = `üóëÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–∏–¥–µ–æ —É–¥–∞–ª—ë–Ω:</b>\n` +
            (c.deleter_id ? `<b>–£–¥–∞–ª–∏–ª:</b> <a href="https://vk.com/id${c.deleter_id}">${user}</a>\n` : '') +
            `ID –≤–∏–¥–µ–æ: <code>${c.video_id}</code>\nID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: <code>${c.id}</code>`;
      break;
    }
    case 'video_comment_restore': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      msg = `‚ôªÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–∏–¥–µ–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/video${c.video_owner_id}_${c.video_id}?reply=${c.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : '');
      break;
    }

    // --- –ê—É–¥–∏–æ
    case 'audio_new': {
      const a = object.audio || object;
      const user = await getVkUserName(a.owner_id);
      msg = `üéµ <b>–ù–æ–≤–∞—è –∞—É–¥–∏–æ–∑–∞–ø–∏—Å—å:</b>\n<b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</b> ${escapeHtml(a.artist || '‚Äî')}\n` +
            `<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${escapeHtml(a.title || '‚Äî')}\n<b>–î–æ–±–∞–≤–∏–ª:</b> <a href="https://vk.com/id${a.owner_id}">${user}</a>`;
      break;
    }

    // --- –û–±—Å—É–∂–¥–µ–Ω–∏—è
    case 'board_post_new':
    case 'board_post_edit': {
      const b = object;
      const user = await getVkUserName(b.from_id);
      const verb = type === 'board_post_new' ? '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏' : '–°–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–æ';
      msg = `üí¨ <b>${verb}:</b>\n<b>–¢–µ–º–∞:</b> ${escapeHtml(b.topic_title || '‚Äî')}\n` +
            `<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${b.from_id}">${user}</a>\n` +
            `<a href="https://vk.com/topic-${b.group_id}_${b.topic_id}?post=${b.id}">–°—Å—ã–ª–∫–∞</a>\n` +
            (b.text ? `<i>${escapeHtml(b.text)}</i>` : '') +
            summarizeAttachments(b.attachments);
      break;
    }
    case 'board_post_delete': {
      const b = object;
      msg = `üóëÔ∏è <b>–°–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ —É–¥–∞–ª–µ–Ω–æ:</b>\n` +
            `ID —Ç–µ–º—ã: <code>${b.topic_id}</code>\nID —Å–æ–æ–±—â–µ–Ω–∏—è: <code>${b.id}</code>`;
      break;
    }

    // --- –ú–∞—Ä–∫–µ—Ç
    case 'market_order_new': {
      const o = object.order || object;
      const user = await getVkUserName(o.user_id);
      const sum = o.total_price?.amount != null ? (o.total_price.amount / 100) : '‚Äî';
      const cur = o.total_price?.currency?.name || '—Ä—É–±.';
      msg = `üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:</b>\n<b>ID:</b> <code>${o.id}</code>\n<b>–û—Ç:</b> <a href="https://vk.com/id${o.user_id}">${user}</a>\n` +
            `<b>–°—É–º–º–∞:</b> ${sum} ${cur}\n<a href="https://vk.com/market?w=orders/view/${o.id}">–û—Ç–∫—Ä—ã—Ç—å –∑–∞–∫–∞–∑</a>`;
      break;
    }
    case 'market_comment_new':
    case 'market_comment_edit': {
      const c = object;
      const user = await getVkUserName(c.from_id);
      const verb = type === 'market_comment_new' ? '–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–æ–≤–∞—Ä—É' : '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–æ–≤–∞—Ä—É –∏–∑–º–µ–Ω—ë–Ω';
      msg = `üí¨ <b>${verb}:</b>\n<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${c.from_id}">${user}</a>\n` +
            `<b>ID —Ç–æ–≤–∞—Ä–∞:</b> <code>${c.item_id}</code>\n` +
            (c.text ? `<i>${escapeHtml(c.text)}</i>` : '') +
            summarizeAttachments(c.attachments);
      break;
    }
    case 'market_comment_delete': {
      const c = object;
      const user = c.deleter_id ? await getVkUserName(c.deleter_id) : '‚Äî';
      msg = `üóëÔ∏è <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–æ–≤–∞—Ä—É —É–¥–∞–ª—ë–Ω:</b>\n` +
            (c.deleter_id ? `<b>–£–¥–∞–ª–∏–ª:</b> <a href="https://vk.com/id${c.deleter_id}">${user}</a>\n` : '') +
            `<b>ID —Ç–æ–≤–∞—Ä–∞:</b> <code>${c.item_id}</code>\nID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: <code>${c.id}</code>`;
      break;
    }

    // --- –û–ø—Ä–æ—Å
    case 'poll_vote_new': {
      const p = object;
      const user = await getVkUserName(p.user_id);
      msg = `üìä <b>–ì–æ–ª–æ—Å –≤ –æ–ø—Ä–æ—Å–µ:</b>\n<b>–û—Ç:</b> <a href="https://vk.com/id${p.user_id}">${user}</a>\n` +
            `<b>–û–ø—Ä–æ—Å ID:</b> <code>${p.poll_id}</code>\n<b>–û–ø—Ü–∏—è ID:</b> <code>${p.option_id}</code>`;
      break;
    }

    // --- –ì—Ä—É–ø–ø–∞/—É—á–∞—Å—Ç–Ω–∏–∫–∏
    case 'group_join': {
      const j = object;
      const user = await getVkUserName(j.user_id);
      msg = `üéâ <b>–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!</b>\n<a href="https://vk.com/id${j.user_id}">${user}</a>`;
      break;
    }
    case 'group_leave': {
      const l = object;
      const user = await getVkUserName(l.user_id);
      msg = `üëã <b>–ü–æ–∫–∏–Ω—É–ª(–∞) —Å–æ–æ–±—â–µ—Å—Ç–≤–æ:</b>\n<a href="https://vk.com/id${l.user_id}">${user}</a>`;
      // –∫–∞–∫ –≤ —Ç–≤–æ—ë–º –∫–æ–¥–µ ‚Äî –º–æ–∂–Ω–æ —Å–ª–∞—Ç—å –≤ LEAD_CHAT_ID, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω
      if (LEAD_CHAT_ID) {
        await sendTelegramMessageWithRetry(LEAD_CHAT_ID, msg, { parse_mode: 'HTML' });
        msg = ''; // —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç
      }
      break;
    }
    case 'group_change_photo': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      msg = `üñºÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∞ –≥–ª–∞–≤–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞:</b>\n` +
            `<b>–ò–∑–º–µ–Ω–∏–ª:</b> <a href="https://vk.com/id${ev.user_id}">${user}</a>`;
      break;
    }
    case 'group_change_settings': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      const field = ev.changes ? Object.values(ev.changes)?.[0]?.field : null;
      msg = `‚öôÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞:</b>\n` +
            `<b>–ò–∑–º–µ–Ω–∏–ª:</b> <a href="https://vk.com/id${ev.user_id}">${user}</a>\n` +
            (field ? `<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞:</b> <code>${escapeHtml(field)}</code>` : '');
      break;
    }
    case 'group_officers_edit': {
      const ev = object;
      const admin = await getVkUserName(ev.admin_id);
      const target = await getVkUserName(ev.user_id);
      if (ev.level_old === 0 && ev.level_new > 0) {
        msg = `üëë <b>–ù–∞–∑–Ω–∞—á–µ–Ω —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å:</b>\n<b>–ù–∞–∑–Ω–∞—á–∏–ª:</b> <a href="https://vk.com/id${ev.admin_id}">${admin}</a>\n` +
              `<b>–ù–∞–∑–Ω–∞—á–µ–Ω:</b> <a href="https://vk.com/id${ev.user_id}">${target}</a> (–£—Ä–æ–≤–µ–Ω—å: ${ev.level_new})`;
      } else if (ev.level_old > 0 && ev.level_new === 0) {
        msg = `üö´ <b>–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å–Ω—è—Ç:</b>\n<b>–°–Ω—è–ª:</b> <a href="https://vk.com/id${ev.admin_id}">${admin}</a>\n` +
              `<b>–°–Ω—è—Ç:</b> <a href="https://vk.com/id${ev.user_id}">${target}</a>`;
      } else {
        msg = `üîÑ <b>–ò–∑–º–µ–Ω—ë–Ω —É—Ä–æ–≤–µ–Ω—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è:</b>\n<b>–ò–∑–º–µ–Ω–∏–ª:</b> <a href="https://vk.com/id${ev.admin_id}">${admin}</a>\n` +
              `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="https://vk.com/id${ev.user_id}">${target}</a> (–° ${ev.level_old} –Ω–∞ ${ev.level_new})`;
      }
      break;
    }
    case 'user_block': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      const admin = await getVkUserName(ev.admin_id);
      msg = `‚õî <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:</b>\n` +
            `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="https://vk.com/id${ev.user_id}">${user}</a>\n` +
            `<b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª:</b> <a href="https://vk.com/id${ev.admin_id}">${admin}</a>`;
      break;
    }
    case 'user_unblock': {
      const ev = object;
      const user = await getVkUserName(ev.user_id);
      const admin = await getVkUserName(ev.admin_id);
      msg = `‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:</b>\n` +
            `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="https://vk.com/id${ev.user_id}">${user}</a>\n` +
            `<b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª:</b> <a href="https://vk.com/id${ev.admin_id}">${admin}</a>`;
      break;
    }

    // --- –õ–∞–π–∫–∏
    case 'like_add':
    case 'like_remove': {
      const ev = object;
      let ownerId = ev.owner_id;
      if (!ownerId) ownerId = -Number(VK_GROUP_ID); // fallback: ID —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π

      const liker = await getVkUserName(ev.liker_id);
      const link = getObjectLinkForLike(ownerId, ev.object_type, ev.object_id, ev.post_id);
      const typeText = getObjectTypeDisplayName(ev.object_type);

      // (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
      let total = null;
      try { total = await tryGetLikesCount(ownerId, ev.object_id, ev.object_type); } catch {}

      msg = `<b>${type === 'like_add' ? '‚ù§Ô∏è –ù–æ–≤—ã–π –ª–∞–π–∫' : 'üíî –õ–∞–π–∫ —É–¥–∞–ª—ë–Ω'}</b>\n` +
            `<b>–û—Ç:</b> <a href="https://vk.com/id${ev.liker_id}">${liker}</a>\n` +
            `<b>${type === 'like_add' ? '–ö' : '–°'}:</b> ${link ? `<a href="${link}">${typeText}</a>` : typeText}` +
            (total != null ? ` (–≤—Å–µ–≥–æ: ${total})` : '');
      break;
    }

    // --- –õ–∏–¥—ã
    case 'lead_forms_new': {
      const lf = object;
      const user = await getVkUserName(lf.user_id);
      const now = new Date().toLocaleString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' });
      const fieldsMap = { phone_number: '–¢–µ–ª–µ—Ñ–æ–Ω', age: '–í–æ–∑—Ä–∞—Å—Ç', custom_0: '–ò–º—è', custom_1: '–§–∞–º–∏–ª–∏—è' };
      let text = `ü•≥ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ (${now})\n<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="https://vk.com/id${lf.user_id}">${user}</a>`;
      if (Array.isArray(lf.answers)) {
        for (const a of lf.answers) {
          const label = fieldsMap[a.key] || a.key;
          const val = Array.isArray(a.answer) ? a.answer.join(', ') : a.answer;
          text += `\n<b>${escapeHtml(label)}:</b> ${escapeHtml(val || '‚Äî')}`;
        }
      }
      // –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ ‚Äî –≤ LEAD_CHAT_ID, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω
      if (LEAD_CHAT_ID) {
        await sendTelegramMessageWithRetry(LEAD_CHAT_ID, text, { parse_mode: 'HTML' });
        text = '';
      }
      msg = text || '';
      break;
    }

    // --- Fallback: –ª—é–±–æ–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ç–æ–∂–µ —É—Ö–æ–¥–∏—Ç!
    default: {
      msg = `‚ùì <b>–°–æ–±—ã—Ç–∏–µ VK:</b>\n–¢–∏–ø: <code>${escapeHtml(type)}</code>\n<pre>${escapeHtml(JSON.stringify(object, null, 2))}</pre>`;
      break;
    }
  }

  if (msg) {
    await sendTelegramMessageWithRetry(MAIN, msg, { parse_mode: 'HTML' });
  }
}

module.exports = { handleVkEvent };

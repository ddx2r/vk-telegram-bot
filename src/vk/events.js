// src/vk/events.js ‚Äî –ª–∞–∫–æ–Ω–∏—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è VK Callback API (HTML + —Å—Å—ã–ª–∫–∏ + —Å—á—ë—Ç—á–∏–∫–∏ –ª–∞–π–∫–æ–≤)

const axios = require('axios');
const { state, shouldDeliver } = require('../state'); // may be undefined ‚Äî —Å–º. allowDeliver()
const { sendTelegramMessageWithRetry } = require('../telegram');
const { escapeHtml, getVkUserName } = require('../utils');
const { VK_GROUP_ID, VK_SERVICE_KEY, LEAD_CHAT_ID } = require('../config');

/* ================== helpers ================== */

function allowDeliver(type) {
  if (typeof shouldDeliver === 'function') return !!shouldDeliver(type);
  const m = (state && state.eventToggleState) ? state.eventToggleState : {};
  return !(Object.prototype.hasOwnProperty.call(m, type) && m[type] === false);
}

function mainChat() {
  return state.CURRENT_MAIN_CHAT_ID;
}

async function notifyMAIN(html) {
  const chat = mainChat();
  if (!chat || !html) return;
  await sendTelegramMessageWithRetry(String(chat), html, { parse_mode: 'HTML' });
}

async function notifyLEAD(html) {
  const lead = LEAD_CHAT_ID || state.LEAD_CHAT_ID;
  if (!lead || !html) return;
  await sendTelegramMessageWithRetry(String(lead), html, { parse_mode: 'HTML' });
}

async function userLink(id) {
  const name = await getVkUserName(id).catch(() => `id${id}`);
  return `<a href="https://vk.com/id${id}">${escapeHtml(name)}</a>`;
}

function objNounDative(type) {
  const t = String(type || '').toLowerCase(); // –¥–ª—è "–∫ <—á–µ–º—É?>"
  switch (t) {
    case 'post': return '–ø–æ—Å—Ç—É';
    case 'comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é';
    case 'photo': return '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏';
    case 'video': return '–≤–∏–¥–µ–æ';
    case 'clip': return '–∫–ª–∏–ø—É';
    case 'story': return '–∏—Å—Ç–æ—Ä–∏–∏';
    case 'note': return '–∑–∞–º–µ—Ç–∫–µ';
    case 'photo_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ñ–æ—Ç–æ';
    case 'video_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ –≤–∏–¥–µ–æ';
    case 'topic_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏';
    case 'market': return '—Ç–æ–≤–∞—Ä—É';
    case 'market_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ç–æ–≤–∞—Ä—É';
    case 'topic': return '–æ–±—Å—É–∂–¥–µ–Ω–∏—é';
    default: return '–æ–±—ä–µ–∫—Ç—É';
  }
}

function objNounAblative(type) {
  const t = String(type || '').toLowerCase(); // –¥–ª—è "–æ—Ç <—á–µ–≥–æ?>"
  switch (t) {
    case 'post': return '–ø–æ—Å—Ç–∞';
    case 'comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è';
    case 'photo': return '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏';
    case 'video': return '–≤–∏–¥–µ–æ';
    case 'clip': return '–∫–ª–∏–ø–∞';
    case 'story': return '–∏—Å—Ç–æ—Ä–∏–∏';
    case 'note': return '–∑–∞–º–µ—Ç–∫–∏';
    case 'photo_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ —Ñ–æ—Ç–æ';
    case 'video_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –≤–∏–¥–µ–æ';
    case 'topic_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏';
    case 'market': return '—Ç–æ–≤–∞—Ä–∞';
    case 'market_comment': return '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ —Ç–æ–≤–∞—Ä—É';
    case 'topic': return '–æ–±—Å—É–∂–¥–µ–Ω–∏—è';
    default: return '–æ–±—ä–µ–∫—Ç–∞';
  }
}

function absOwner(ownerId) {
  return String(ownerId || '').replace(/^-/, '');
}

function buildObjectLink(ownerId, objectType, objectId, postId) {
  const t = String(objectType || '').toLowerCase();
  const ownAbs = absOwner(ownerId);
  switch (t) {
    case 'post':            return `https://vk.com/wall-${ownAbs}_${objectId}`;
    case 'comment':         return postId ? `https://vk.com/wall-${ownAbs}_${postId}?reply=${objectId}` : null;
    case 'photo':           return `https://vk.com/photo-${ownAbs}_${objectId}`;
    case 'video':           return `https://vk.com/video-${ownAbs}_${objectId}`;
    case 'clip':            return `https://vk.com/clip-${ownAbs}_${objectId}`; // –µ—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –≤–µ—Ä–Ω—ë—Ç—Å—è null
    case 'market':          return `https://vk.com/market-${ownAbs}?w=product-${ownAbs}_${objectId}`;
    case 'topic':           return `https://vk.com/topic-${ownAbs}_${postId || objectId}`;
    case 'photo_comment':   return `https://vk.com/photo-${ownAbs}_${postId || objectId}?reply=${objectId}`;
    case 'video_comment':   return `https://vk.com/video-${ownAbs}_${postId || objectId}?reply=${objectId}`;
    case 'topic_comment':   return `https://vk.com/topic-${ownAbs}_${postId || objectId}?reply=${objectId}`;
    case 'market_comment':  return `https://vk.com/market-${ownAbs}?w=product-${ownAbs}_${postId || objectId}`;
    default:                return null;
  }
}

function toLikesApiType(objectType) {
  const t = String(objectType || '').toLowerCase();
  switch (t) {
    case 'post':
    case 'comment':
    case 'photo':
    case 'video':
    case 'note':
    case 'photo_comment':
    case 'video_comment':
    case 'topic_comment':
    case 'market':
    case 'market_comment':
    case 'sitepage':
      return t;
    default:
      return null;
  }
}

async function tryGetLikesCount(ownerId, objectId, objectType) {
  const type = toLikesApiType(objectType);
  if (!type || !VK_SERVICE_KEY) return null;
  const params = {
    access_token: VK_SERVICE_KEY,
    v: '5.199',
    type,
    owner_id: ownerId,
    item_id: objectId,
    count: 0
  };
  try {
    const { data } = await axios.get('https://api.vk.com/method/likes.getList', { params, timeout: 3000 });
    if (data && data.response && typeof data.response.count === 'number') return data.response.count;
  } catch (_) {}
  return null;
}

function groupLink() {
  const id = absOwner(-Number(VK_GROUP_ID));
  return `https://vk.com/public${id}`;
}

/* ================== handler ================== */

async function handleVkEvent({ type, object }) {
  if (!allowDeliver(type)) return;

  let msg = '';

  switch (type) {
    /* ---------- –°–æ–æ–±—â–µ–Ω–∏—è (–ª–∞–∫–æ–Ω–∏—á–Ω–æ) ---------- */
    case 'message_new': {
      const m = object.message || object;
      const u = await userLink(m.from_id);
      msg = `üí¨ ${u} –Ω–∞–ø–∏—Å–∞–ª(–∞)`;
      break;
    }
    case 'message_reply': {
      const r = object;
      const u = await userLink(r.from_id);
      msg = `‚Ü©Ô∏è –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${u}`;
      break;
    }
    case 'message_edit': {
      const r = object;
      const u = await userLink(r.from_id);
      msg = `‚úèÔ∏è ${u} –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª(–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ`;
      break;
    }
    case 'message_allow': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `‚úÖ ${u} —Ä–∞–∑—Ä–µ—à–∏–ª(–∞) —Å–æ–æ–±—â–µ–Ω–∏—è`;
      break;
    }
    case 'message_deny': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `‚õîÔ∏è ${u} –∑–∞–ø—Ä–µ—Ç–∏–ª(–∞) —Å–æ–æ–±—â–µ–Ω–∏—è`;
      break;
    }
    case 'message_typing_state': {
      const ev = object;
      const u = await userLink(ev.from_id);
      msg = `‚å®Ô∏è ${u} –ø–µ—á–∞—Ç–∞–µ—Ç‚Ä¶`;
      break;
    }
    case 'message_event': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `üñ≤Ô∏è ${u} –Ω–∞–∂–∞–ª(–∞) –∫–Ω–æ–ø–∫—É`;
      break;
    }

    /* ---------- –õ–∞–π–∫–∏ (–ª–∞–∫–æ–Ω–∏—á–Ω–æ + –°–ß–Å–¢–ß–ò–ö) ---------- */
    case 'like_add': {
      const ev = object;
      const ownerId = ev.owner_id || -Number(VK_GROUP_ID);
      const u = await userLink(ev.liker_id);
      const noun = objNounDative(ev.object_type);
      const link = buildObjectLink(ownerId, ev.object_type, ev.object_id, ev.post_id);
      const obj = link ? `<a href="${link}">${noun}</a>` : noun;

      let total = null;
      try { total = await tryGetLikesCount(ownerId, ev.object_id, ev.object_type); } catch {}
      msg = `‚ù§Ô∏è ${u} –∫ ${obj}${typeof total === 'number' ? ` (–í—Å–µ–≥–æ: ${total})` : ''}`;
      break;
    }
    case 'like_remove': {
      const ev = object;
      const ownerId = ev.owner_id || -Number(VK_GROUP_ID);
      const u = await userLink(ev.liker_id);
      const noun = objNounAblative(ev.object_type);
      const link = buildObjectLink(ownerId, ev.object_type, ev.object_id, ev.post_id);
      const obj = link ? `<a href="${link}">${noun}</a>` : noun;

      let total = null;
      try { total = await tryGetLikesCount(ownerId, ev.object_id, ev.object_type); } catch {}
      msg = `üíî ${u} –æ—Ç ${obj}${typeof total === 'number' ? ` (–í—Å–µ–≥–æ: ${total})` : ''}`;
      break;
    }

    /* ---------- –°—Ç–µ–Ω–∞ ---------- */
    case 'wall_post_new': {
      const p = object;
      const u = await userLink(p.from_id || p.owner_id);
      const link = `https://vk.com/wall${p.owner_id}_${p.id}`;
      msg = `üß± ${u} –∫ <a href="${link}">–ø–æ—Å—Ç—É</a>`;
      break;
    }
    case 'wall_post_edit': {
      const p = object;
      const link = `https://vk.com/wall${p.owner_id}_${p.id}`;
      msg = `‚úèÔ∏è –ü–æ—Å—Ç: <a href="${link}">–æ–±–Ω–æ–≤–ª—ë–Ω</a>`;
      break;
    }
    case 'wall_reply_new': {
      const c = object;
      const u = await userLink(c.from_id);
      const link = `https://vk.com/wall-${absOwner(c.owner_id)}_${c.post_id}?reply=${c.id}`;
      msg = `üí¨ ${u} –∫ <a href="${link}">–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é</a>`;
      break;
    }
    case 'wall_reply_edit': {
      const c = object;
      const link = `https://vk.com/wall-${absOwner(c.owner_id)}_${c.post_id}?reply=${c.id}`;
      msg = `‚úèÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <a href="${link}">–æ–±–Ω–æ–≤–ª—ë–Ω</a>`;
      break;
    }
    case 'wall_reply_delete': {
      const c = object;
      const link = `https://vk.com/wall-${absOwner(c.owner_id)}_${c.post_id}`;
      msg = `üóëÔ∏è –£–¥–∞–ª—ë–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ <a href="${link}">–ø–æ—Å—Ç—É</a>`;
      break;
    }
    case 'wall_reply_restore': {
      const c = object;
      const link = `https://vk.com/wall-${absOwner(c.owner_id)}_${c.post_id}?reply=${c.id}`;
      msg = `‚ôªÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω <a href="${link}">–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</a>`;
      break;
    }

    /* ---------- –ú–µ–¥–∏–∞ ---------- */
    case 'photo_new': {
      const ph = object;
      const u = await userLink(ph.user_id || ph.owner_id);
      const link = `https://vk.com/photo-${absOwner(ph.owner_id)}_${ph.id}`;
      msg = `üñºÔ∏è ${u} –∫ <a href="${link}">—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</a>`;
      break;
    }
    case 'video_new': {
      const v = object;
      const u = await userLink(v.user_id || v.owner_id);
      const link = `https://vk.com/video-${absOwner(v.owner_id)}_${v.id}`;
      msg = `üé¨ ${u} –∫ <a href="${link}">–≤–∏–¥–µ–æ</a>`;
      break;
    }
    case 'audio_new': {
      const a = object;
      const title = [a.artist, a.title].filter(Boolean).map(escapeHtml).join(' ‚Äî ') || '–∞—É–¥–∏–æ';
      msg = `üéµ –î–æ–±–∞–≤–ª–µ–Ω —Ç—Ä–µ–∫: ${title}`;
      break;
    }

    /* ---------- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –º–µ–¥–∏–∞/—Ç–æ–≤–∞—Ä–∞–º/–æ–±—Å—É–∂–¥–µ–Ω–∏—è–º ---------- */
    case 'photo_comment_new': {
      const c = object;
      const u = await userLink(c.from_id);
      msg = `üñºÔ∏è ${u} –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ñ–æ—Ç–æ`;
      break;
    }
    case 'video_comment_new': {
      const c = object;
      const u = await userLink(c.from_id);
      msg = `üé¨ ${u} –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ –≤–∏–¥–µ–æ`;
      break;
    }
    case 'market_comment_new': {
      const c = object;
      const u = await userLink(c.from_id);
      msg = `üõí ${u} –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ç–æ–≤–∞—Ä—É`;
      break;
    }
    case 'topic_comment_new': {
      const c = object;
      const u = await userLink(c.from_id);
      const link = `https://vk.com/topic-${absOwner(c.owner_id)}_${c.topic_id}?reply=${c.id}`;
      msg = `üóÇÔ∏è ${u} –∫ <a href="${link}">–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏</a>`;
      break;
    }

    /* ---------- –û–±—Å—É–∂–¥–µ–Ω–∏—è (board) ---------- */
    case 'board_post_new': {
      const ev = object;
      const u = ev.from_id ? await userLink(ev.from_id) : '–ö—Ç–æ-—Ç–æ';
      const link = `https://vk.com/topic-${absOwner(ev.group_id || VK_GROUP_ID)}_${ev.topic_id || ev.post_id || ev.object_id}`;
      msg = `üìå ${u} –∫ <a href="${link}">–∑–∞–ø–∏—Å–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏</a>`;
      break;
    }

    /* ---------- –ú–∞—Ä–∫–µ—Ç –∑–∞–∫–∞–∑—ã ---------- */
    case 'market_order_new': {
      const o = object;
      const u = o.user_id ? await userLink(o.user_id) : '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å';
      msg = `üßæ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑: ${u}`;
      break;
    }
    case 'market_order_edit': {
      const o = object;
      msg = `üßæ –ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª—ë–Ω`;
      break;
    }

    /* ---------- –ì—Ä—É–ø–ø–∞ / –ü–æ–¥–ø–∏—Å–∫–∏ / –ú–æ–¥–µ—Ä–∞—Ü–∏—è ---------- */
    case 'group_join': {
      const ev = object;
      const u = await userLink(ev.user_id);
      const kind = String(ev.join_type || '').toLowerCase();
      msg = `üü¢ ${u} –≤—Å—Ç—É–ø–∏–ª(–∞)`;
      // –¥—É–±–ª—å –≤ –ª–∏–¥-—á–∞—Ç –¥–ª—è "–Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫"
      ///if (kind === 'request') {
      /// await notifyLEAD(`üü¢ ${u} –∑–∞–ø—Ä–æ—Å–∏–ª(–∞) –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ <a href="${groupLink()}">—Å–æ–æ–±—â–µ—Å—Ç–≤–æ</a>`);
      ///}
      break;
    }
    case 'group_leave': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `üî¥ ${u} –≤—ã—à–µ–ª(–∞)`;
      // –¥—É–±–ª—å –≤ –ª–∏–¥-—á–∞—Ç
      await notifyLEAD(`üî¥ ${u} –≤—ã—à–µ–ª(–∞) –∏–∑ <a href="${groupLink()}">—Å–æ–æ–±—â–µ—Å—Ç–≤–∞</a>`);
      break;
    }
    case 'user_block': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `üö´ ${u} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω(–∞)`;
      break;
    }
    case 'user_unblock': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `‚úÖ ${u} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω(–∞)`;
      break;
    }
    case 'group_officers_edit': {
      msg = `üõ°Ô∏è –ò–∑–º–µ–Ω—ë–Ω —Å–æ—Å—Ç–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤`;
      break;
    }
    case 'group_change_settings': {
      msg = `‚öôÔ∏è –ò–∑–º–µ–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞`;
      break;
    }
    case 'group_change_photo': {
      msg = `üñºÔ∏è –°–º–µ–Ω–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞`;
      break;
    }

    /* ---------- –û–ø—Ä–æ—Å—ã / –õ–∏–¥-—Ñ–æ—Ä–º—ã / –ü—Ä–æ—á–µ–µ ---------- */
    case 'poll_vote_new': {
      const ev = object;
      const u = await userLink(ev.user_id);
      msg = `üìä –ì–æ–ª–æ—Å: ${u}`;
      break;
    }
    case 'lead_forms_new': {
      const lf = object;
      const u = lf.user_id ? await userLink(lf.user_id) : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      msg = `üìù –õ–∏–¥-—Ñ–æ—Ä–º–∞: ${u}`;
      break;
    }
    case 'app_payload': {
      const ev = object;
      const u = ev.user_id ? await userLink(ev.user_id) : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      msg = `üì¶ App payload: ${u}`;
      break;
    }
    case 'vkpay_transaction': {
      const ev = object;
      const u = ev.from_id ? await userLink(ev.from_id) : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      msg = `üí≥ VK Pay: ${u}`;
      break;
    }

    /* ---------- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ª–∞–∫–æ–Ω–∏—á–Ω–æ) ---------- */
    default: {
      msg = `‚ùì ${escapeHtml(String(type))}`;
      break;
    }
  }

  if (msg) {
    await notifyMAIN(msg);
  }
}

module.exports = { handleVkEvent };

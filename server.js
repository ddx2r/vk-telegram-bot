// server.js - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ VK Callback API –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ Telegram

// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
const express = require('express'); // –í–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è Node.js
const bodyParser = require('body-parser'); // –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-–∑–∞–ø—Ä–æ—Å–æ–≤
const axios = require('axios'); // –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∫ Telegram API –∏ VK API)
const crypto = require('crypto'); // –î–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
const NodeCache = require('node-cache'); // –î–ª—è in-memory –∫—ç—à–∞ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = express();
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ body-parser –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON-—Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(bodyParser.json());

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
// –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ Railway
const VK_GROUP_ID = process.env.VK_GROUP_ID;
const VK_SECRET_KEY = process.env.VK_SECRET_KEY;
const VK_API_TOKEN = process.env.VK_API_TOKEN; // –î–æ–±–∞–≤–ª–µ–Ω VK API Token
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!VK_GROUP_ID || !VK_SECRET_KEY || !VK_API_TOKEN || !TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (VK_GROUP_ID, VK_SECRET_KEY, VK_API_TOKEN, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.');
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ (TTL 60 —Å–µ–∫—É–Ω–¥)
// –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥
const deduplicationCache = new NodeCache({ stdTTL: 60, checkperiod: 120 });

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML-—Å—É—â–Ω–æ—Å—Ç–µ–π
function escapeHtml(text) {
    if (typeof text !== 'string') {
        text = String(text);
    }
    return text
       .replace(/&/g, "&amp;")
       .replace(/</g, "&lt;")
       .replace(/>/g, "&gt;")
       .replace(/"/g, "&quot;")
       .replace(/'/g, "&#039;");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è VK –ø–æ ID
async function getVkUserName(userId) {
    try {
        const response = await axios.get(`https://api.vk.com/method/users.get`, {
            params: {
                user_ids: userId,
                access_token: VK_API_TOKEN,
                v: '5.131' // –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è VK API
            },
            timeout: 5000 // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ VK API
        });

        if (response.data && response.data.response && response.data.response.length > 0) {
            const user = response.data.response[0];
            return `${escapeHtml(user.first_name)} ${escapeHtml(user.last_name)}`;
        }
        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, –µ—Å–ª–∏ –∏–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    } catch (error) {
        console.error(`[${new Date().toISOString()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è VK (ID: ${userId}):`, error.response ? error.response.data : error.message);
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ Telegram
        try {
            await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
                chat_id: TELEGRAM_CHAT_ID,
                text: `‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è VK (ID: ${userId}): ${escapeHtml(error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}. –°–æ–±—ã—Ç–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å ID.`,
                parse_mode: 'HTML',
                timeout: 5000 // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
            });
        } catch (telegramError) {
            console.error(`[${new Date().toISOString()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ Telegram:`, telegramError.message);
        }
        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ POST-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç VK Callback API
app.post('/webhook', async (req, res) => { // –ú–∞—Ä—à—Ä—É—Ç /webhook
    const { type, object, group_id, secret } = req.body;

    console.log(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç VK. –¢–∏–ø: ${type}, Group ID: ${group_id}`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    if (secret !== VK_SECRET_KEY) {
        console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º: ${secret}. –û–∂–∏–¥–∞–ª—Å—è: ${VK_SECRET_KEY}`);
        return res.status(403).send('Forbidden: Invalid secret key');
    }

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –∞–¥—Ä–µ—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
    if (type === 'confirmation') {
        console.log(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –Ω–æ –∞–¥—Ä–µ—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º.`);
        return res.send('ok');
    }

    // –õ–æ–≥–∏–∫–∞ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ö–µ—à –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è.
    // –•–µ—à –≤–∫–ª—é—á–∞–µ—Ç —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –∏ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.
    const objectId = object?.id || object?.message?.id || object?.post?.id || object?.photo?.id || object?.video?.id || object?.user_id;
    const eventHash = crypto.createHash('md5').update(JSON.stringify({ type, objectId })).digest('hex');

    if (deduplicationCache.has(eventHash)) {
        console.log(`[${new Date().toISOString()}] –î—É–±–ª–∏—Ä—É—é—â–µ–µ—Å—è —Å–æ–±—ã—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ: –¢–∏–ø: ${type}, –•–µ—à: ${eventHash}`);
        return res.send('ok');
    }
    deduplicationCache.set(eventHash, true);
    console.log(`[${new Date().toISOString()}] –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: –¢–∏–ø: ${type}, –•–µ—à: ${eventHash}`);


    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π VK
    let telegramMessage = '';
    let parseMode = 'HTML';

    try {
        let userName = '';
        switch (type) {
            case 'message_new':
                const message = object.message;
                if (message && message.text) {
                    userName = await getVkUserName(message.from_id);
                    const senderDisplay = userName ? userName : `ID ${message.from_id}`;

                    telegramMessage = `üí¨ <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ VK:</b>\n`;
                    telegramMessage += `<b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> <a href="https://vk.com/id${message.from_id}">${senderDisplay}</a>\n`;
                    telegramMessage += `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> <i>${escapeHtml(message.text)}</i>`;
                } else {
                    console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω–æ message_new –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:`, object);
                    telegramMessage = `üí¨ <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ VK:</b> (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è)`;
                }
                break;
            case 'wall_post_new':
                const post = object.post;
                if (post && post.text) {
                    userName = await getVkUserName(post.from_id);
                    const authorDisplay = userName ? userName : `ID ${post.from_id}`;

                    telegramMessage = `üìù <b>–ù–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ —Å—Ç–µ–Ω–µ VK:</b>\n`;
                    telegramMessage += `<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://vk.com/id${post.from_id}">${authorDisplay}</a>\n`;
                    telegramMessage += `<a href="https://vk.com/wall${post.owner_id}_${post.id}">–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç</a>\n`;
                    telegramMessage += `<i>${escapeHtml(post.text)}</i>`;
                } else {
                    console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω–æ wall_post_new –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞ –ø–æ—Å—Ç–∞:`, object);
                    telegramMessage = `üìù <b>–ù–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ —Å—Ç–µ–Ω–µ VK:</b> (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º –ø–æ—Å—Ç–∞)`;
                }
                break;
            case 'photo_new':
                const photo = object.photo;
                if (photo && photo.owner_id) {
                    const photoUrl = photo.sizes?.find(s => s.type === 'x')?.url || photo.sizes?.[photo.sizes.length - 1]?.url;
                    userName = await getVkUserName(photo.owner_id);
                    const ownerDisplay = userName ? userName : `ID ${photo.owner_id}`;

                    telegramMessage = `üì∏ <b>–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤ VK:</b>\n`;
                    telegramMessage += `<b>–í–ª–∞–¥–µ–ª–µ—Ü:</b> <a href="https://vk.com/id${photo.owner_id}">${ownerDisplay}</a>\n`;
                    telegramMessage += photoUrl ? `<a href="${photoUrl}">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ</a>` : `(–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)`;
                } else {
                    console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω–æ photo_new –±–µ–∑ owner_id –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞ —Ñ–æ—Ç–æ:`, object);
                    telegramMessage = `üì∏ <b>–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤ VK:</b> (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ñ–æ—Ç–æ)`;
                }
                break;
            case 'video_new':
                const video = object.video;
                if (video && video.owner_id) {
                    userName = await getVkUserName(video.owner_id);
                    const videoOwnerDisplay = userName ? userName : `ID ${video.owner_id}`;

                    telegramMessage = `üé• <b>–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ VK:</b>\n`;
                    telegramMessage += `<b>–í–ª–∞–¥–µ–ª–µ—Ü:</b> <a href="https://vk.com/id${video.owner_id}">${videoOwnerDisplay}</a>\n`;
                    telegramMessage += `<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${escapeHtml(video.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n`;
                    telegramMessage += `<a href="https://vk.com/video${video.owner_id}_${video.id}">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ</a>`;
                } else {
                    console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω–æ video_new –±–µ–∑ owner_id –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞ –≤–∏–¥–µ–æ:`, object);
                    telegramMessage = `üé• <b>–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ VK:</b> (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤–∏–¥–µ–æ)`;
                }
                break;
            case 'group_join':
                const joinEvent = object;
                if (joinEvent && joinEvent.user_id) {
                    userName = await getVkUserName(joinEvent.user_id);
                    const joinUserDisplay = userName ? userName : `ID ${joinEvent.user_id}`;

                    telegramMessage = `‚ûï <b>–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤ VK:</b> <a href="https://vk.com/id${joinEvent.user_id}">${joinUserDisplay}</a> –≤—Å—Ç—É–ø–∏–ª –≤ –≥—Ä—É–ø–ø—É!`;
                } else {
                    console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω–æ group_join –±–µ–∑ user_id –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞:`, object);
                    telegramMessage = `‚ûï <b>–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤ VK:</b> (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è)`;
                }
                break;
            case 'group_leave':
                const leaveEvent = object;
                if (leaveEvent && leaveEvent.user_id) {
                    userName = await getVkUserName(leaveEvent.user_id);
                    const leaveUserDisplay = userName ? userName : `ID ${leaveEvent.user_id}`;

                    telegramMessage = `‚ûñ <b>–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª VK:</b> <a href="https://vk.com/id${leaveEvent.user_id}">${leaveUserDisplay}</a> –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É.`;
                } else {
                    console.warn(`[${new Date().toISOString()}] –ü–æ–ª—É—á–µ–Ω–æ group_leave –±–µ–∑ user_id –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞:`, object);
                    telegramMessage = `‚ûñ <b>–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª VK:</b> (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è)`;
                }
                break;
            default:
                console.log(`[${new Date().toISOString()}] –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è VK: ${type}. –ü–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç:`, JSON.stringify(object));
                telegramMessage = `‚ùì <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∏–ª–∏ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ VK:</b>\n–¢–∏–ø: <code>${escapeHtml(type)}</code>\n<pre>${escapeHtml(JSON.stringify(object, null, 2).substring(0, 1000) + (JSON.stringify(object, null, 2).length > 1000 ? '...' : ''))}</pre>`;
                break;
        }

        if (telegramMessage) {
            // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏–∫–æ–π –ø–æ–≤—Ç–æ—Ä–∞
            let sent = false;
            for (let i = 0; i < 3; i++) { // –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–æ 3 —Ä–∞–∑
                try {
                    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
                        chat_id: TELEGRAM_CHAT_ID,
                        text: telegramMessage,
                        parse_mode: parseMode,
                        disable_web_page_preview: true
                    }, {
                        timeout: 5000 // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
                    });
                    console.log(`[${new Date().toISOString()}] –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –¥–ª—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è: ${type}. –ü–æ–ø—ã—Ç–∫–∞: ${i + 1}`);
                    sent = true;
                    break;
                } catch (telegramSendError) {
                    console.error(`[${new Date().toISOString()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (–ø–æ–ø—ã—Ç–∫–∞ ${i + 1}):`, telegramSendError.response ? telegramSendError.response.data : telegramSendError.message);
                    if (i < 2) await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1))); // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                }
            }
            if (!sent) {
                console.error(`[${new Date().toISOString()}] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è: ${type}`);
                try {
                    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
                        chat_id: TELEGRAM_CHAT_ID,
                        text: `‚ùå <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏ VK —Ç–∏–ø–∞ <code>${escapeHtml(type)}</code> –≤ Telegram –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway.`,
                        parse_mode: 'HTML',
                        timeout: 5000
                    });
                } catch (finalTelegramError) {
                    console.error(`[${new Date().toISOString()}] –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:`, finalTelegramError.message);
                }
            }
        }

    } catch (error) {
        console.error(`[${new Date().toISOString()}] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è VK –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –¥–ª—è —Ç–∏–ø–∞ ${type}:`, error.response ? error.response.data : error.message);
        try {
            await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
                chat_id: TELEGRAM_CHAT_ID,
                text: `‚ùå <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è VK:</b>\n–¢–∏–ø: <code>${escapeHtml(type)}</code>\n–°–æ–æ–±—â–µ–Ω–∏–µ: ${escapeHtml(error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.`,
                parse_mode: 'HTML',
                timeout: 5000
            });
        } catch (telegramError) {
            console.error(`[${new Date().toISOString()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ Telegram:`, telegramError.message);
        }
    }

    res.send('ok');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`[${new Date().toISOString()}] –°–µ—Ä–≤–µ—Ä VK-Telegram –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// server.js ‚Äî HTTP-—Å–∫–ª–µ–π–∫–∞ –∏ –º–∞—Ä—à—Ä—É—Ç—ã

const express = require('express');
const bodyParser = require('body-parser');

const {
  VK_GROUP_ID,
  VK_SECRET_KEY,
  TELEGRAM_CHAT_ID,
  DEBUG_CHAT_ID,
  BOT_VERSION
} = require('./src/config');

const { bot, sendTelegramMessageWithRetry } = require('./src/telegram');
const { registerCommands } = require('./src/commands');
const { shouldProcessEvent, rememberEvent } = require('./src/vk/dedup');
const { handleVkEvent } = require('./src/vk/events');

// –õ–æ–≥–≥–µ—Ä Supabase
const { withRequestId, logMiddlewareTelegram, logMiddlewareVK, logger, logError } = require('./src/lib/logger');

const app = express();
app.use(withRequestId());
app.use(bodyParser.json());

// –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∞–ø—Ç–∞–π–º
global.__BOT_STARTED_AT = new Date();

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
registerCommands(bot);

// Health
app.get('/health', (req, res) => {
  const up = Math.floor((Date.now() - (global.__BOT_STARTED_AT?.getTime() || Date.now())) / 1000);
  res.status(200).json({ ok: true, uptime_sec: up, ts: new Date().toISOString() });
});

// VK webhook
app.post('/webhook', logMiddlewareVK(), async (req, res) => {
  const { type, object, group_id, secret } = req.body || {};
  console.log(`[${new Date().toISOString()}] VK —Å–æ–±—ã—Ç–∏–µ: ${type}`);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–∞
  if (secret !== VK_SECRET_KEY) return res.status(403).send('Forbidden');

  // confirmation/—à—É–º ‚Äî –±—ã—Å—Ç—Ä—ã–π ACK
  if (type === 'confirmation' || type === 'typing_status' || type === 'message_read') {
    return res.send('ok');
  }

  // –ë—ã—Å—Ç—Ä—ã–π ACK, —á—Ç–æ–±—ã VK –Ω–µ —Ä–µ—Ç—Ä–∞–∏–ª
  res.send('ok');

  try {
    // –î–µ–¥—É–ø
    if (!shouldProcessEvent({ type, object, group_id })) {
      console.log('–î—É–±–ª–∏–∫–∞—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫.');
      return;
    }
    rememberEvent({ type, object, group_id });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è
    await handleVkEvent({ type, object });

  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ VK-—Å–æ–±—ã—Ç–∏—è:', e.message);
    if (DEBUG_CHAT_ID) {
      await sendTelegramMessageWithRetry(DEBUG_CHAT_ID, `‚ùå –û—à–∏–±–∫–∞: ${e.message}`);
    }
  }
});

// –ó–∞–ø—É—Å–∫
const PORT = process.env.PORT || 3000;
app.listen(PORT, async () => {
  console.log(`[${new Date().toISOString()}] –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  // —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ DEBUG
  if (DEBUG_CHAT_ID) {
    const lines = [
      'üü¢ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!',
      `–°–æ–æ–±—â–µ—Å—Ç–≤–æ: https://vk.com/public${VK_GROUP_ID}`,
      `–í–µ—Ä—Å–∏—è: ${BOT_VERSION}`,
      `–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`,
      `–û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç: ${TELEGRAM_CHAT_ID}`
    ];
    await sendTelegramMessageWithRetry(DEBUG_CHAT_ID, lines.join('\n'));—Ñ
  }
});

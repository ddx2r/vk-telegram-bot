// server.js - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ VK Callback API –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ Telegram

// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
const express = require('express'); // –í–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è Node.js
const bodyParser = require('body-parser'); // –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-–∑–∞–ø—Ä–æ—Å–æ–≤
const axios = require('axios'); // –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∫ Telegram API)
const crypto = require('crypto'); // –î–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
const NodeCache = require('node-cache'); // –î–ª—è in-memory –∫—ç—à–∞ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = express();
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ body-parser –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON-—Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(bodyParser.json());

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
// –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ Railway
const VK_GROUP_ID = process.env.VK_GROUP_ID;
const VK_SECRET_KEY = process.env.VK_SECRET_KEY;
// VK_CONFIRMATION_STRING –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –∞–¥—Ä–µ—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!VK_GROUP_ID || !VK_SECRET_KEY || !TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (VK_GROUP_ID, VK_SECRET_KEY, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.');
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ (TTL 60 —Å–µ–∫—É–Ω–¥)
// –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥
const deduplicationCache = new NodeCache({ stdTTL: 60, checkperiod: 120 });

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ POST-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç VK Callback API
app.post('/webhook', async (req, res) => { // –ò–∑–º–µ–Ω–µ–Ω –º–∞—Ä—à—Ä—É—Ç –Ω–∞ /webhook —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–µ–º—É –ø—Ä–∏–º–µ—Ä—É
    const { type, object, group_id, secret } = req.body;

    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç VK:', type, object, group_id);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    // –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    if (secret !== VK_SECRET_KEY) {
        console.warn('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º:', secret);
        return res.status(403).send('Forbidden: Invalid secret key');
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ —É–¥–∞–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –∞–¥—Ä–µ—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.
    // –ï—Å–ª–∏ VK –≤—Å–µ –µ—â–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç confirmation, –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:
    if (type === 'confirmation') {
        console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –Ω–æ –∞–¥—Ä–µ—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º.');
        return res.send('ok'); // –í–∞–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å 'ok', —á—Ç–æ–±—ã VK –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª –∑–∞–ø—Ä–æ—Å
    }

    // –õ–æ–≥–∏–∫–∞ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ö–µ—à –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è.
    // –•–µ—à –≤–∫–ª—é—á–∞–µ—Ç —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –∏ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.
    const eventHash = crypto.createHash('md5').update(JSON.stringify({
        type,
        objectId: object.id || object.message?.id || object.post?.id || object.photo?.id || object.video?.id || object.user_id
    })).digest('hex');

    if (deduplicationCache.has(eventHash)) {
        console.log(`–î—É–±–ª–∏—Ä—É—é—â–µ–µ—Å—è —Å–æ–±—ã—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${type} - ${eventHash}`);
        return res.send('ok'); // VK –æ–∂–∏–¥–∞–µ—Ç 'ok' –¥–∞–∂–µ –¥–ª—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    }
    deduplicationCache.set(eventHash, true); // –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à –≤ –∫—ç—à

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π VK
    let telegramMessage = '';
    let parseMode = 'HTML'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    try {
        switch (type) {
            case 'message_new':
                const message = object.message;
                if (message.text) {
                    // –î–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é "—Ç–æ–ª—å–∫–æ —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                    // –ú—ã –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ "–ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è".
                    telegramMessage = `üí¨ <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ VK:</b>\n`;
                    telegramMessage += `<b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> <a href="https://vk.com/id${message.from_id}">ID ${message.from_id}</a>\n`;
                    telegramMessage += `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> <i>${escapeHtml(message.text)}</i>`;
                }
                break;
            case 'wall_post_new':
                const post = object.post;
                if (post.text) {
                    telegramMessage = `üìù <b>–ù–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ —Å—Ç–µ–Ω–µ VK:</b>\n`;
                    telegramMessage += `<a href="https://vk.com/wall${post.owner_id}_${post.id}">–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç</a>\n`;
                    telegramMessage += `<i>${escapeHtml(post.text)}</i>`;
                }
                break;
            case 'photo_new':
                const photo = object.photo;
                // VK API –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–æ—Ç–æ, –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞–∏–±–æ–ª—å—à–∏–π –∏–ª–∏ –Ω—É–∂–Ω—ã–π
                const photoUrl = photo.sizes.find(s => s.type === 'x')?.url || photo.sizes[photo.sizes.length - 1]?.url;
                if (photoUrl) {
                    telegramMessage = `üì∏ <b>–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤ VK:</b> <a href="${photoUrl}">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ</a>`;
                }
                break;
            case 'video_new':
                const video = object.video;
                telegramMessage = `üé• <b>–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ VK:</b> <a href="https://vk.com/video${video.owner_id}_${video.id}">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ</a>`;
                break;
            case 'group_join':
                const joinEvent = object;
                telegramMessage = `‚ûï <b>–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤ VK:</b> <a href="https://vk.com/id${joinEvent.user_id}">ID ${joinEvent.user_id}</a> –≤—Å—Ç—É–ø–∏–ª –≤ –≥—Ä—É–ø–ø—É!`;
                break;
            case 'group_leave':
                const leaveEvent = object;
                telegramMessage = `‚ûñ <b>–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª VK:</b> <a href="https://vk.com/id${leaveEvent.user_id}">ID ${leaveEvent.user_id}</a> –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É.`;
                break;
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
            default:
                console.log(`–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è VK: ${type}`);
                break;
        }

        if (telegramMessage) {
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
            await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
                chat_id: TELEGRAM_CHAT_ID,
                text: telegramMessage,
                parse_mode: parseMode,
                disable_web_page_preview: true // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Å—ã–ª–æ–∫ –¥–ª—è –±–æ–ª–µ–µ —á–∏—Å—Ç–æ–≥–æ –≤—ã–≤–æ–¥–∞
            });
            console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –¥–ª—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è: ${type}`);
        }

    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è VK –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –¥–ª—è —Ç–∏–ø–∞ ${type}:`, error.response ? error.response.data : error.message);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º 'ok' VK, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
        // –∏ –Ω–µ –ø–æ–º–µ—á–∞—Ç—å –≤–µ–±—Ö—É–∫ –∫–∞–∫ –Ω–µ—Ä–∞–±–æ—á–∏–π.
    }

    res.send('ok'); // VK –æ–∂–∏–¥–∞–µ—Ç 'ok' –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML-—Å—É—â–Ω–æ—Å—Ç–µ–π
function escapeHtml(text) {
    return text
       .replace(/&/g, "&amp;")
       .replace(/</g, "&lt;")
       .replace(/>/g, "&gt;")
       .replace(/"/g, "&quot;")
       .replace(/'/g, "&#039;");
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000; // Railway –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç —Å–≤–æ–π –ø–æ—Ä—Ç
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä VK-Telegram –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
